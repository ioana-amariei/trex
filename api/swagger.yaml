swagger: "2.0"
info:
  description: "Trex description"
  version: "1.0.0"
  title: "Trex"
host: localhost
basePath: /trex/api
tags:
- name: "books"
  description: "Search for books"
- name: "articles"
  description: "Search for articles"
- name: "videos"
  description: "Search for videos"
schemes:
- "http"
paths:
  /books:
    get:
      tags:
      - "books"
      summary: "Search for books"
      description: "Search for books"
      operationId: "getBooks"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      parameters:
        - in: "query"
          name: "terms"
          type: string
          required: true
          description: "The keywords to search for"
        - in: "query"
          name: "language"
          type: string
          description: "The language of the books"
        - in: "query"
          name: "minimumRating"
          type: number
          description: "The minimum rating of the books"
        - in: "query"
          name: "from"
          type: number
          description: "The starting year of the books"
        - in: "query"
          name: "to"
          type: number
          description: "The final year of the books"
      responses:
        200:
          description: "successful operation"
          schema:
             $ref: "#/definitions/BooksResponse"
        400:
          description: "Invalid status value"
        405:
          description: "Invalid input"
  /articles:
    get:
      tags:
      - "articles"
      summary: "Search for articles"
      description: "Search for articles"
      operationId: "getArticles"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      parameters:
        - in: "query"
          name: "ti"
          type: string
          required: true
          description: "The keyword(s) to search for"
        - in: "query"
          name: "sortBy"
          type: string
          required: true
          description: "The field to sort articles by"
        - in: "query"
          name: "sortOrder"
          type: number
          required: true
          description: "The direction to sort articles"
        - in: "query"
          name: "start"
          type: number
          required: true
          description: "The starting page of the article query"
        - in: "query"
          name: "max_results"
          type: number
          required: true
          description: "The number of results to return"
      responses:
        200:
          description: "successful operation"
          schema:
             $ref: "#/definitions/ArticlesResponse"
        400:
          description: "Invalid status value"
        405:
          description: "Invalid input"
  /videos:
      get:
        tags:
        - "videos"
        summary: "Search for videos"
        description: "Search for videos"
        operationId: "getVideos"
        consumes:
        - "*/*"
        produces:
        - "application/json"
        parameters:
          - in: "query"
            name: "termen"
            type: string
            required: true
            description: "The keywords to search for"
          - in: "query"
            name: "per_page"
            type: string
            required: true
            description: "Number of videos to display per each page"
        responses:
          200:
            description: "successful operation"
            schema:
               $ref: "#/definitions/VideosResponse"
          400:
            description: "Invalid status value"
          405:
            description: "Invalid input"
definitions:
    Resource:
        type: "object"
        properties:
            type:
                type: "string"
            title:
                type: "string"
            description:
                type: "string"
            authors:
                type: "array"
                items:
                    type: "object"
            image:
                type: "string"
            tags:
                type: "array"
                items:
                    type: "object"
            rating:
                type: "number"
            date:
                type: "string"
            language:
                type: "string"
            url:
                type: "string"
    BooksResponse:
        type: "object"
        properties:
            totalItems:
                type: "number"
            books:
                type: "array"
                items:
                    $ref: "#/definitions/Resource"
    ArticlesResponse:
        type: "object"
        properties:
            articles:
                type: "array"
                items:
                    $ref: "#/definitions/Resource"
    VideosResponse:
        type: "object"
        properties:
            videos:
                type: "array"
                items:
                    $ref: "#/definitions/Resource"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
